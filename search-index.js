var searchIndex = {};
searchIndex["wurl"] = {"doc":"","items":[[0,"network","wurl","",null,null],[0,"ws","wurl::network","",null,null],[5,"connect","wurl::network::ws","",null,{"inputs":[{"name":"options"}],"output":{"generics":["sender","wserror"],"name":"result"}}],[0,"util","wurl","",null,null],[0,"options","wurl::util","The command line options provided to the program",null,null],[3,"OptionParseError","wurl::util::options","An error that occurs when parsing of an option occurs",null,null],[3,"Options","","",null,null],[12,"silent","","Supresses all output except incoming frames",0,null],[12,"url","","The WebSocket URL to connect to.",0,null],[12,"show_control_frames","","Specifies when to print control frames. Control frames will be prefixed with the type of control frame, for example \"[ping]\", and further prefixed with \">\" for outgoing control frames",0,null],[12,"echo","","Print outgoing frames as well as the incoming frames. Outgoing frames will be prefixed with \">\".",0,null],[12,"print_headers","","Print the headers of any HTTP request when true.",0,null],[12,"headers","","Headers",0,null],[4,"Show","","An enumeration for identifying the direction frames are headed.",null,null],[13,"None","","Does not match any headers",1,null],[13,"All","","Matches both incoming and outgoing frames",1,null],[13,"Incoming","","Matches only incoming (ingress) frames",1,null],[13,"Outgoing","","Matches only outgoing (egress) frames",1,null],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"optionparseerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"show"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"show"}],"output":{"name":"bool"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"options"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"options"}}],[11,"nothing","","Construct options for iterating over none of the symbol kinds.",0,{"inputs":[],"output":{"name":"options"}}]],"paths":[[3,"Options"],[4,"Show"],[3,"OptionParseError"]]};
initSearch(searchIndex);
